version: '3.8'

services:
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - forex-net
    volumes:
      - redis-data:/data

  data-collector-db:
    image: postgres
    container_name: data-collector-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: forex_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - forex-net
    volumes:
      - postgres-data-collector:/var/lib/postgresql/data

  rest-provider-db:
    image: postgres
    container_name: rest-provider-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: rest_provider_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - forex-net
    volumes:
      - postgres-rest-provider:/var/lib/postgresql/data



  tcp-data-provider:
    image: yusufokr0/tcp-data-provider:1.0.0
    container_name: tcp_data_provider_app
    ports:
      - "8090:8090"
    environment:
      - SERVER_PORT=8090
      - CURRENCY_PAIRS=TCP_USDTRY,TCP_EURUSD,TCP_GBPUSD
      - TCP_USDTRY_BID=37.9973
      - TCP_USDTRY_ASK=38.0333
      - TCP_USDTRY_MIN_LIMIT=35.2134
      - TCP_USDTRY_MAX_LIMIT=40.1324
      - TCP_EURUSD_BID=1.0848
      - TCP_EURUSD_ASK=1.0949
      - TCP_EURUSD_MIN_LIMIT=1.01254
      - TCP_EURUSD_MAX_LIMIT=1.21423
      - TCP_GBPUSD_BID=1.295
      - TCP_GBPUSD_ASK=1.395
      - TCP_GBPUSD_MIN_LIMIT=1.11245
      - TCP_GBPUSD_MAX_LIMIT=1.42142
      - PUBLISH_FREQUENCY=10000
      - USER_CREDENTIALS=user|pass,admin|admin
      - SPIKE_INTERVAL=10
      - TOYOTA_LOG_LEVEL=TRACE
    networks:
      - forex-net
    volumes:
      - tcp-platform-log:/tcp-data-provider/logs


  rest-data-provider:
    image: yusufokr0/rest-data-provider:1.0.0
    container_name: rest-data-provider-app
    ports:
      - "8092:8092"
    environment:
      DATABASE_URL: jdbc:postgresql://rest-provider-db:5432/rest_provider_db
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
      REDIS_CUSTOM_HOST: redis
      REDIS_CUSTOM_PORT: 6379
      MINIMUM_RATE_CHANGE: 0.001
      MAXIMUM_RATE_CHANGE: 0.004
      RATE_INTERVAL: 10000
      SPIKE_PERCENTAGE: 0.011
      SPIKE_INTERVAL: 20
      LOG_LEVEL_TOYOTA: INFO
      #SPRING_CONFIG_LOCATION: file:/app/config/application.yml,classpath:application.properties
      # IF YOU WANT TO START THE SYSTEM WITH YOUR SELECTED EXCHANGE RATES,
      # SET THE INITIAL VALUES FROM THE APPLICATION YAML FILE IN THE 'external-config' FOLDER AND MOUNT THE FILE INTO THE CONTAINER.
    networks:
      - forex-net
    depends_on:
      - rest-provider-db
      - redis
    volumes:
      - rest-platform-log:/rest-data-provider/logs
      #- ./external-config/rest-platform/application.yml:/app/config/application.yml



  kafka-db-consumer:
    image: yusufokr0/kafka-db-consumer:1.0.0
    container_name: kafka-db-consumer
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://data-collector-db:5432/forex_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
      KAFKA_CUSTOM_BOOTSTRAP_SERVERS: kafka:9093
      KAFKA_CUSTOM_CONSUMER_RAW_TOPIC: raw-rates
      KAFKA_CUSTOM_CONSUMER_RAW_GROUP_ID: raw-rates-group
      KAFKA_CUSTOM_CONSUMER_CALCULATED_TOPIC: calculated-rates
      KAFKA_CUSTOM_CONSUMER_CALCULATED_GROUP_ID: calculated-rates-group
      KAFKA_CUSTOM_CONSUMER_AUTO_OFFSET_RESET: latest
    networks:
      - forex-net
    depends_on:
      - kafka
      - data-collector-db





  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - forex-net
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:9093,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9093,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      - zookeeper
    networks:
      - forex-net
    volumes:
      - kafka-data:/var/lib/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "9090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: forex-kafka-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - forex-net


volumes:
  redis-data:
  zk-data:
  zk-log:
  kafka-data:
  postgres-data-collector:
  postgres-rest-provider:
  rest-platform-log:
  tcp-platform-log:

networks:
  forex-net:
    driver: bridge