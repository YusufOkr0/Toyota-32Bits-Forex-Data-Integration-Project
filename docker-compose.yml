version: '3.8'

services:

  ######## DATA REPOSITORIES ########

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - forex-net
    volumes:
      - redis-data:/data

  postgres-rest-platform:
    image: postgres
    container_name: postgres-rest-platform
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: forex_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - forex-net
    volumes:
      - postgres-data-collector:/var/lib/postgresql/data

  postgres-kafka:
    image: postgres
    container_name: postgres-kafka
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: rest_provider_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - forex-net
    volumes:
      - postgres-rest-provider:/var/lib/postgresql/data




  ######## MY APPLICATIONS ########

  forex-data-collector:
    image: yusufokr0/forex-data-collector:1.0.0
    container_name: forex-data-collector
    environment:
      EXCHANGE_RATES: USDTRY,EURUSD,GBPUSD
      TCP_PLATFORM_HOST: tcp-data-provider-app
      TCP_PLATFORM_PORT: 8090
      TCP_PLATFORM_USERNAME: admin
      TCP_PLATFORM_PASSWORD: admin
      REST_PLATFORM_BASE_URL: http://rest-data-provider-app:8092
      REST_PLATFORM_USERNAME: YusufOkr0
      REST_PLATFORM_PASSWORD: YusufOkr0
      SUBSCRIPTION_DELAY_MS: 5000
      CONNECTION_RETRY_LIMIT: 10
      RETRY_DELAY_SECONDS: 6
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      KAFKA_TOPIC_RAW: raw-rates
      KAFKA_TOPIC_CALCULATED: calculated-rates
    volumes:
      - main-app-log:/forex-data-collector/logs
    networks:
      - forex-net
    depends_on:
      - kafka
      - redis



  tcp-data-provider:
    image: yusufokr0/tcp-data-provider:1.0.0
    container_name: tcp-data-provider-app
    ports:
      - "8090:8090"
    environment:
      - SERVER_PORT=8090
      - CURRENCY_PAIRS=TCP_USDTRY,TCP_EURUSD,TCP_GBPUSD
      - TCP_USDTRY_BID=38.4426
      - TCP_USDTRY_ASK=38.8584
      - TCP_USDTRY_MIN_LIMIT=36.5134
      - TCP_USDTRY_MAX_LIMIT=40.1324
      - TCP_EURUSD_BID=1.1266
      - TCP_EURUSD_ASK=1.1569
      - TCP_EURUSD_MIN_LIMIT=1.02254
      - TCP_EURUSD_MAX_LIMIT=1.22423
      - TCP_GBPUSD_BID=1.3273
      - TCP_GBPUSD_ASK=1.3573
      - TCP_GBPUSD_MIN_LIMIT=1.22245
      - TCP_GBPUSD_MAX_LIMIT=1.42142
      - PUBLISH_FREQUENCY=5000
      - USER_CREDENTIALS=user|pass,admin|admin,32bit|aloha,
      - SPIKE_INTERVAL=10
      - LOG_LEVEL_TOYOTA=TRACE
    networks:
      - forex-net
    volumes:
      - tcp-platform-log:/tcp-data-provider/logs


  rest-data-provider:
    image: yusufokr0/rest-data-provider:1.0.0
    container_name: rest-data-provider-app
    ports:
      - "8092:8092"
    environment:
      DATABASE_URL: jdbc:postgresql://postgres-rest-platform:5432/rest_provider_db
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      REDIS_CUSTOM_HOST: redis
      REDIS_CUSTOM_PORT: 6379
      MINIMUM_RATE_CHANGE: 0.001
      MAXIMUM_RATE_CHANGE: 0.004
      RATE_INTERVAL: 10000
      SPIKE_PERCENTAGE: 0.011
      SPIKE_INTERVAL: 20
      LOG_LEVEL_TOYOTA: INFO
      #SPRING_CONFIG_LOCATION: file:/app/config/application.yml,classpath:application.properties
      # IF YOU WANT TO START THE SYSTEM WITH YOUR SELECTED EXCHANGE RATES,
      # SET THE INITIAL VALUES FROM THE APPLICATION YAML FILE IN THE 'external-config' FOLDER AND MOUNT THE FILE INTO THE CONTAINER.
    networks:
      - forex-net
    depends_on:
      - rest-provider-db
      - redis
    volumes:
      - rest-platform-log:/rest-data-provider/logs
      #- ./external-config/rest-platform/application.yml:/app/config/application.yml:ro



  kafka-db-consumer:
    image: yusufokr0/kafka-db-consumer:1.0.0
    container_name: kafka-db-consumer
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-kafka:5432/forex_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      KAFKA_CUSTOM_BOOTSTRAP_SERVERS: kafka:9093
      KAFKA_CUSTOM_CONSUMER_RAW_TOPIC: raw-rates
      KAFKA_CUSTOM_CONSUMER_RAW_GROUP_ID: raw-rates-group
      KAFKA_CUSTOM_CONSUMER_CALCULATED_TOPIC: calculated-rates
      KAFKA_CUSTOM_CONSUMER_CALCULATED_GROUP_ID: calculated-rates-group
      KAFKA_CUSTOM_CONSUMER_AUTO_OFFSET_RESET: earliest
    networks:
      - forex-net
    depends_on:
      - kafka
      - data-collector-db




  ######## KAFKA COMPONENTS ########

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - forex-net
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:9093,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9093,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      - zookeeper
    networks:
      - forex-net
    volumes:
      - kafka-data:/var/lib/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "9090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: forex-kafka-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - forex-net




  ######## LOG PIPELINE ########


  filebeat:
    image: docker.elastic.co/beats/filebeat-oss:7.12.1
    entrypoint: "filebeat -e -strict.perms=false"   # bypass config file permission check.
    container_name: filebeat
    user: root
    volumes:
      - ./forex-data-collector/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - main-app-log:/var/log/main-app:ro  # only readable
    depends_on:
      - logstash
      - forex-data-collector
    networks:
      - logging-network



  logstash:
    image: opensearchproject/logstash-oss-with-opensearch-output-plugin:7.16.2
    container_name: logstash
    user: root
    ports:
      - "5044:5044"
    volumes:
      - ./forex-data-collector/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
      - opensearch
    networks:
      - logging-network

  opensearch:
    image: opensearchproject/opensearch:latest
    container_name: opensearch
    environment:
      - discovery.type=single-node
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - bootstrap.memory_lock=true
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=Yusuf.32Bits
    ports:
      - "9200:9200" # OpenSearch API
      - "9600:9600" # Performans izleme
    networks:
      - logging-network

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboards
    environment:
      - OPENSEARCH_HOSTS=["https://opensearch:9200"]
      - SERVER_HOST=0.0.0.0
      - OPENSEARCH_USERNAME=admin
      - OPENSEARCH_PASSWORD=Yusuf.32Bits
    ports:
      - "5601:5601" # OpenSearch Dashboards web arayüzü
    depends_on:
      - opensearch
    networks:
      - logging-network


volumes:
  redis-data:
  zk-data:
  zk-log:
  kafka-data:
  postgres-data-collector:
  postgres-rest-provider:
  rest-platform-log:
  tcp-platform-log:
  main-app-log:

networks:
  logging-network:
    driver: bridge
  forex-net:
    driver: bridge
